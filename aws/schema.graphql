type Colour {
	id: ID!
	name: String!
}

type Cut {
	id: ID!
	rollId: ID!
	length: Float
	reason: String
	orderId: String
	notes: String
	timestamp: String
}

type Defect {
	id: ID!
	code: String!
	name: String!
	description: String
}

type Mutation {
	createColour(name: String!): Colour
	deleteColour(id: ID!): [Colour]
	createStyle(
		name: String!,
		weight: Float,
		thickness: Float,
		patternWidth: Float,
		patternHeight: Float
	): Style
	deleteStyle(id: ID!): [Style]
	createStyleColour(colourId: String!, styleId: String!, swatchUrl: String): StyleColour
	createDefect(code: String!, name: String!, description: String): Defect
	deleteDefect(id: ID!): Defect
	createRoll(
		originalLength: Float,
		colourStyleId: ID!,
		glenRavenId: String,
		locationId: ID,
		notes: String,
		shipmentId: ID
	): Roll
	deleteRoll(id: ID!): Roll
	deleteAllRolls: [Roll]
	createShipment(
		name: String!,
		dateSent: String,
		dateReceived: String,
		glenRavenId: String
	): Shipment
	deleteShipment(id: ID!): [Shipment]
	createCut(
		rollId: ID!,
		length: Float!,
		reason: String,
		order: String,
		notes: String,
		orderId: String
	): Cut
	deleteCut(id: ID!): [Cut]
	deleteAllCuts: [Cut]
}

type Query {
	getColour(id: ID!): Colour
	getColours: [Colour]
	getStyle(id: ID!): Style
	getStyles: [Style]
	getStyleColours: [StyleColour]
	getDefects: [Defect]
	stylesColours: [StyleColour]
	getRolls: [Roll]
	getRoll(id: ID!): Roll
	roll(id: ID!): Roll
	styleColourPage(id: ID!): StyleColourPage
	getShipments: [Shipment]
	getCut(id: ID!): Cut
	getCuts: [Cut]
}

type Roll {
	id: ID!
	originalLength: Float
	styleColour: StyleColour
	glenRavenId: String
	locationId: ID
	notes: String
	cuts: [Cut]
	shipment: Shipment
}

type Shipment {
	id: ID!
	name: String
	dateSent: String
	dateReceived: String
	glenRavenId: String
}

type Style {
	id: ID!
	name: String!
	weight: Float!
	thickness: Float!
	patternWidth: Float!
	patternHeight: Float!
}

type StyleColour {
	id: ID!
	colour: Colour
	style: Style
	swatchUrl: String
}

type StyleColourPage {
	styleColour: StyleColour
	rolls: [Roll]
	shipments: [Shipment]
}

type Subscription {
	addedColour(id: String!): Colour
		@aws_subscribe(mutations: ["createColour"])
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
